#+TITLE: jemacs-ui.el
#+PROPERTY: header-args:emacs-lisp :tangle ./jemacs-ui.el :mkdirp yes

org-babel-load-file ?

* ui setup

  =custom-theme-directory=

  #+begin_src emacs-lisp
    ;;; mycraft --- Summary  -*- lexical-binding: t; -*-
    ;;; Copyright (C) 2020 mycraft maintainers
    ;;; Author: Jing
    ;;; package --- mycraft
    ;;; Commentary:

    ;;; Code:


    (setq frame-title-format "") ;; to disable show buffer name in the title bar
    (setq scroll-conservatively 101) ;; to prevent recenter when cursor moves out of screen
    (setq scroll-preserve-screen-position t)
    (setq auto-window-vscroll nil)
    (setq warning-minimum-level :error) ;; to supress the pop-up window of warning message
  #+end_src


** make curosr in the help window at first when poping up a help window

   #+begin_src emacs-lisp
     (setq help-window-select t)
   #+end_src


** disable beep when moving beyond the window
   #+begin_src emacs-lisp
     (setq ring-bell-function 'ignore)
   #+end_src


** setup for ns gui system
   #+begin_src emacs-lisp
     (when (eq (window-system) 'ns)
       (setq mac-command-modifier 'meta)
       ;; force to set command key to meta. In other emacs varaint like emacs-plus, the key is defined to =super=
       (setq frame-resize-pixelwise t)
       ;; make sure full maximized frame. It will not occupied the full screen in cocoa version.
       (setq ns-use-proxy-icon nil) ;; disable show icon in the title bar
       (add-to-list 'default-frame-alist '(ns-transparent-titlebar . t)))
   #+end_src

* change comment highlight and org-block color

  #+begin_src emacs-lisp
    (with-eval-after-load 'goto-addr
      (set-face-attribute 'link nil :foreground "#3f7c8f"))
  #+end_src

* enable highlight current line
  enable for prog-mode and text-mode

  jinja2 is the child of text-mode so it's no need to set up for this again.

  #+begin_src emacs-lisp :tangle no
    (with-eval-after-load 'jinja2-mode
      (add-hook 'jinja2-mode-hook 'hl-line-mode))
  #+end_src

  #+begin_src emacs-lisp
    (add-hook 'prog-mode-hook 'hl-line-mode)
    (add-hook 'text-mode-hook 'hl-line-mode)
  #+end_src

* pulse mode

  https://karthinks.com/software/batteries-included-with-emacs/
  #+begin_src emacs-lisp

    (defun pulse-line (&rest _)
      "Pulse the current line."
      (pulse-momentary-highlight-one-line (point)))

    (dolist (command '(windmove-do-window-select
                       winum-select-window-by-number))
      (advice-add command :after #'pulse-line))


  #+end_src
