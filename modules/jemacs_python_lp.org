#+TITLE: jemacs-python.el
#+PROPERTY: header-args:emacs-lisp :tangle ./jemacs-python.el :mkdirp yes

* setup

  #+begin_src emacs-lisp
    ;;; mycraft --- Summary  -*- lexical-binding: t; -*-
    ;;; Copyright (C) 2020 mycraft maintainers
    ;;; Author: Jing
    ;;; package --- mycraft
    ;;; Commentary:

    ;;; Code:


  #+end_src

* python mode

  This is a basic setup for python language.

  #+begin_src emacs-lisp
    (with-eval-after-load 'python
      (setq python-shell-interpreter "ipython"))

    (use-package python-pytest
      :defer t
      :custom
      (python-pytest-confirm t))

    (use-package poetry
      :commands
      (poetry-venv-workon
       poetry-get-virtualenv
       poetry-venv-deactivate
       poetry-venv-toggle))

    (use-package pyvenv
      :commands (pyvenv-mode)
      :hook
      (python-mode . pyvenv-mode))

    (use-package pyimport
      :defer t
      :hook
      (before-save-hook . pyimport-remove-unused))

    (use-package cython-mode
      :defer t)
  #+end_src

* python relevant
  #+begin_src emacs-lisp
    (defvar python-run-command "python")
    (defvar python-run-args "")

    (defun workon-virtual-env-and-lsp ()
      (interactive)
      (poetry-venv-workon)
      (call-interactively 'eglot))

    ;; TODO: implement this one
    (defun my-run-python ()
      "Use vterm to run python shell instead.
         Furthermore, using ipython instead if it's installed."
      (interactive)

      ;; create a vterm buffer with python shell
      ;; maybe, I can reference from the python-inferior-mode

      (if (featurep 'poetry)
          (vterm-send-string (poetry-virtualenv-path))
        (vterm-send-string "python"))
      (vterm-send-return))

    (defun python-run-main ()
      (interactive)
      (shell-command
       (format (concat python-run-command " %s %s")
               (shell-quote-argument (or (file-remote-p (buffer-file-name (buffer-base-buffer)) 'localname)
                                         (buffer-file-name (buffer-base-buffer))))
               python-run-args)))
  #+end_src

* provide package

  #+begin_src emacs-lisp
    (provide 'jemacs-python)
    ;;; jemacs-python.el ends here
  #+end_src
