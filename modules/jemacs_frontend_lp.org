#+TITLE: jemacs-frontend.el
#+PROPERTY: header-args:emacs-lisp :tangle ./jemacs-frontend.el :mkdirp yes

* setup

  #+begin_src emacs-lisp
    ;;; mycraft --- Summary  -*- lexical-binding: t; -*-
    ;;; Copyright (C) 2020 mycraft maintainers
    ;;; Author: Jing
    ;;; package --- mycraft
    ;;; Commentary:

    ;;; Code:


  #+end_src

* frontend development
  #+begin_src emacs-lisp
    (use-package emmet-mode
      :defer t
      :hook
      (html-mode . emmet-mode)
      (web-mode . emmet-mode))

    (use-package web-mode
      :defer t
      :mode
      (("\\.html\\'" . web-mode)
       ("\\.vue\\'" . web-mode)))

    (use-package js2-mode
      :after (rainbow-delimiters)
      :defer t
      :config
      (setq js2-mode-show-parse-errors nil)
      (setq js2-mode-show-strict-warnings nil)
      (js2-minor-mode))

    (use-package typescript-mode
      :after (rainbow-delimiters)
      :mode (("\\.ts\\'" . typescript-mode))
      :defer t)

    (use-package css-in-js-mode
      :straight '(css-in-js-mode :type git :host github :repo "orzechowskid/tree-sitter-css-in-js"))

    (use-package tsx-mode
      :defer t
      :straight
      (:type git :host github :repo "orzechowskid/tsx-mode.el" :branch "emacs30")
      :mode (("\\.[jt]s[x]?\\'" . tsx-mode))
      :config
      (tsx-mode))

  #+end_src

* formatter

  #+begin_src emacs-lisp
    (use-package apheleia
      :defer t
      :functions
      apheleia-global-mode
      :defines
      apheleia-formatters
      apheleia-mode-alist
      :config
      (setf (alist-get 'prettier-json apheleia-formatters)
            '("prettier" "--stdin-filepath" filepath))
      (apheleia-global-mode 1))
  #+end_src

* mobile

  #+begin_src emacs-lisp
    (use-package dart-mode
      :defer t)

    (use-package flutter
      :defer t
      :after (dart-mode)
      :config
      (setq flutter-sdk-path (directory-file-name
                              (file-name-directory
                               (directory-file-name
                                (file-name-directory (executable-find "flutter")))))))
  #+end_src

* provide package

  #+begin_src emacs-lisp
    (provide 'jemacs-frontend)
    ;;; jemacs-frontend.el ends here
  #+end_src
