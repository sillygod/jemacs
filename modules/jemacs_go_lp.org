#+TITLE: jemacs-go.el
#+PROPERTY: header-args:emacs-lisp :tangle ./jemacs-go.el :mkdirp yes

* setup

  #+begin_src emacs-lisp
    ;;; mycraft --- Summary  -*- lexical-binding: t; -*-
    ;;; Copyright (C) 2020 mycraft maintainers
    ;;; Author: Jing
    ;;; package --- mycraft
    ;;; Commentary:

    ;;; Code:


  #+end_src

* go mode
  #+begin_src emacs-lisp
    (use-package go-mode
      :defer t
      :custom
      (gofmt-command "goimports")
      :hook
      (before-save . gofmt-before-save))

    (use-package go-ts-mode
      :defer t
      :custom
      (go-ts-mode-indent-offset 4))

    (use-package protobuf-mode
      :defer t)

    (use-package gomacro-mode
      :hook (go-mode . gomacro-mode))
  #+end_src

* go-test

  if you pass a function as the arguement of :local-repo, it will not be evaludated.

  #+begin_src emacs-lisp :tangle no
    (use-package gotests
      :defer 1
      :straight (
                 :local-repo (concat home-dir "local/gotests")
                 )
      ;; the file with suffix -test will be treated as tests files by default
      ;; which will function as package files.
      ;; :load-path "~/Desktop/spacemacs-private/local/go-test"
      ;; :config
      ;; (package-generate-autoloads "go-test" "~/Desktop/spacemacs-private/local/go-test")
      ;; (load-library "go-test-autoloads")
      )
  #+end_src

  We can use quasiquote to achieve the effects

  #+begin_src emacs-lisp
    (eval `(use-package gotests
             :defer t
             :straight (:local-repo ,(concat home-dir "local/gotests"))))

  #+end_src

* golang relevant helper
  #+begin_src emacs-lisp

    (defvar go-run-command "go run")
    (defvar go-run-args ""
      "Additional arguments to by supplied to `go run` during runtime.")

    (defun go-run-main ()
      (interactive)
      (shell-command
       (format (concat go-run-command " %s %s")
               (shell-quote-argument (or (file-remote-p (buffer-file-name (buffer-base-buffer)) 'localname)
                                         (buffer-file-name (buffer-base-buffer))))
               go-run-args)))


    ;; github.com/ramya-rao-a/go-outline@latest
    ;; github.com/cweill/gotests/gotests@latest
    ;; github.com/fatih/gomodifytags@latest
    ;; github.com/josharian/impl@latest
    ;; github.com/haya14busa/goplay/cmd/goplay@latest
    ;; github.com/go-delve/delve/cmd/dlv@latest
    ;; go get -u honnef.co/go/tools/cmd/staticcheck@latest
    ;; golang.org/x/tools/gopls@latest
    ;; gopkgs

    ;; write a helper for upgrade these tools
    ;; reinstall all the tools found in the golang's bin directory?
  #+end_src

* provide package

  #+begin_src emacs-lisp
    (provide 'jemacs-go)
    ;;; jemacs-go.el ends here
  #+end_src
